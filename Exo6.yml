openapi: 3.0.0
info:
  title: Gestion Utilisateurs
  version: 1.0.0
  description: Exercice 6 – Bonnes pratiques (partiellement complété)

tags:
  - name: Users
    description: Opérations liées aux profils utilisateurs

paths:
  /users/{id}:
    get:
      tags:
        - Users
      summary: Récupère un utilisateur par son identifiant
      parameters:
        - $ref: '#/components/parameters/userId'
      responses:
        '200':
          description: Utilisateur trouvé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'

  /users:
    post:
      tags:
        - Users
      summary: Crée une liste d’utilisateurs
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateUserProfile'
      responses:
        '201':
          description: Utilisateurs créés avec succès
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserProfile'


components:
  parameters:
    userId:
      name: id
      in: path
      description: Identifiant unique de l’utilisateur
      required: true
      schema:
        type: string
#profile
  schemas:
    UserProfile:
      type: object
      properties:
        identifier:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        birthdate:
          type: string
          format: date
        email:
          type: string
          format: email
        address_street:
          type: string
        address_city:
          type: string
        address_country:
          type: string
        address_postal_code:
          type: integer
        needs_newsletter:
          type: boolean
        language:
          type: string
          enum: [mg, fr, eng]
      required:
        - identifier
        - first_name
        - last_name
        - birthdate
        - email

#user
    CreateUserProfile:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        birthdate:
          type: string
          format: date
        email:
          type: string
          format: email
        address_street:
          type: string
        address_city:
          type: string
        address_country:
          type: string
        address_postal_code:
          type: integer
        needs_newsletter:
          type: boolean
        language:
          type: string
          enum: [mg, fr, eng]
      required:
        - first_name
        - last_name
        - birthdate
        - email
        - address_street
        - address_city
        - address_country
        - address_postal_code
        - needs_newsletter
        - language
